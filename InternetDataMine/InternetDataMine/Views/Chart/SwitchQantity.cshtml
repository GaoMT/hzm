@{
    ViewBag.Title = "历史开关量柱图";
    Layout = "~/Views/Shared/_Charts.cshtml";
}

<style type="text/css">
    .title {
        float: left;
        margin: 5px 0 0 5px;
        width: auto;
    }

    .input {
        width: 50%;
    }
</style>

<div class="easyui-layout" data-options="fit:true">
    <div data-options="region:'north',title:'模拟量历史曲线',split:false,collapsible:false" style="height:70px;">
        <form id="myform" class="easyui-form" method="post" data-options="novalidate:true">
            <div class="title"><div class="easyui-combobox" id="ddlMine" data-options="prompt:'煤矿名称',required:true" style="width:150px;height:35px;"></div></div>
            <div class="title"><div class="easyui-combogrid" id="ddlDevType" data-options="prompt:'设备名称',required:true" style="width:150px;height:35px;"></div></div>
            <div class="title"><div class="easyui-combogrid" id="ddlSensor" data-options="prompt:'测点位置',required:true" style="width:300px;height:35px;"></div></div>
            <div class="title"><div class="easyui-datebox" id="ddlBeginTime" data-options="prompt:'查询日期',required:true" style="height:35px;"></div></div>
            <div id="divEndtime" class="title"><div class="easyui-datebox" id="ddlEndTime" data-options="prompt:'结束时间',required:true" style="height:35px;"></div></div>
            <div id="divQuery" class="title"><div class="easyui-linkbutton" data-options="iconCls:'icon-search'" style="height:35px;" onclick="ValidateQureyInput()">查询</div></div>
        </form>
    </div>
    <div id="mydiv" data-options="region:'center',fit:true,split:false,border:false">
        <div id="main" style="width:99%; height:400px; border:0px solid #ccc;margin:10px 0 0 10px;"></div>
    </div>
</div>
<div id="myDialog"></div>




<script type="text/javascript">

    var MineCode = "";//煤矿名称
    var DevType = "D";//设备类型
    var DevTypeName = "";
    var devTypeCodes = "";//传感器名称编码
    var SensorNames = "";
    var SensorCodes = "";
    var IsSensorCountOverSix = false;//所选传感器数量是否超出6个
    var Unit = "";
    var myChart = null;

    var LegendData = [];

    $("#ddlMine").ready(function () {

        $("#ddlMine").combotree({
            url: '../Center/ReturnComboTreeData?mineCode=',
            onChange: function (newValue, oldValue) { if (newValue != "0") { MineCode = newValue; LoadDeviceTypeforCombobox(newValue); } }
        });



        // LoadData();

    });

    

    function LoadSensorInfoFoCombogrid() {
        $("#ddlSensor").combogrid({
            url: '../Center/ReturnComboGridForSensorInfo?mineCode=' + MineCode + "&SensorNameCode=" + devTypeCodes + "&devType=" + DevType,
            panelWidth: 600,
            sortName: 'TypeName',
            sortOrder: 'desc',
            idField: 'SensorNum',
            textField: 'Place',
            multiple: true,
            singleSelect: false,
            columns: [[
         { field: 'select', title: '选择', checkbox: true, width: 40 },
        { field: 'SensorNum', title: '测点编号', width: 60 },
        { field: 'TypeName', title: '测点类型', width: 100 },
        { field: 'Place', title: '测点位置', width: 200 },
         { field: 'ZeroMeaning', title: '0态含义', width: 60 },
          { field: 'OneMeaning', title: '1态含义', width: 60 },
           { field: 'TwoMeaning', title: '2态含义', width: 60 },

            ]],
            onCheck: function (rowIndex, rowData) {
                if ($("#ddlSensor").combogrid("getValues").length > 6) {
                    IsSensorCountOverSix = true;
                    $.messager.alert('错误提示', '最多只能选六个测点！', 'error');
                   
                }
                else {
                    // alert($("#ddlSensor").combogrid("getValues").length);
                    var CheckedDataRow = $($("#ddlSensor").combogrid("grid")).datagrid("getChecked")[0];

                    LegendData = [];
                    LegendData.push(CheckedDataRow.ZeroMeaning);
                    LegendData.push(CheckedDataRow.OneMeaning);
                    LegendData.push(CheckedDataRow.TwoMeaning);
                    IsSensorCountOverSix = false;
                }
            },
            onUncheck: function (rowIndex, rowData) {

                if ($("#ddlSensor").combogrid("getValues").length > 6) {
                    IsSensorCountOverSix = true;
                  
                }
                else {
                    IsSensorCountOverSix = false;
                }

            }

        });
    }

    $("#main").ready(function () {
        //$("#mydiv")[0].style.height = height;
        var height = getQueryString("Height");
        $("#main")[0].style.height = (height - 90) + 'px';
        myChart = echarts.init(document.getElementById('main'));
        //myChart.setOption(myoption);

    });


    function LoadDeviceTypeforCombobox(mineCode) {
        $("#ddlDevType").combogrid({
            url: '../Center/ReturnComboboxForDevType?mineCode=' + mineCode + '&Type=' + DevType,
            panelWidth: 300,
            sortName: 'Typename',
            sortOrder: 'desc',
            idField: 'TypeCode',
            textField: 'TypeName',
            singleSelect: false,
            columns: [[
               { field: 'TypeCode', title: '设备编号', width: 60 },
               { field: 'TypeName', title: '设备名称', width: 100 },
               { field: 'Unit', title: '单位', width: 60 },
               { field: 'Type', title: '类型', width: 60 }
            ]],
            onchange: function (newValue, oldValue) {
            },
            onClickRow: function (rowIndex, rowData)
            {
                devTypeCodes = rowData.TypeCode;
                DevTypeName = $("#ddlDevType").combogrid("getText");
                Unit = "";
                LoadSensorInfoFoCombogrid();


            }
        });
    }



    // Step:3 echarts & zrender as a Global Interface by the echarts-plain.js.
    // Step:3 echarts和zrender被echarts-plain.js写入为全局接口



    function ValidateQureyInput() {
        $.messager.progress();	// 显示进度条
        var isValid = false;
        $('#myform').form('submit',
            {
                onSubmit: function () {
                    isValid = $(this).form('enableValidation').form('validate');

                },
                success: function () {
                    if (isValid) {
                        if (IsSensorCountOverSix==false) {
                            LoadData();
                        }
                        else {

                           
                            $.messager.alert('错误提示', '最多只能选六个测点！', 'error');

                        }
                    }
                    $.messager.progress('close');	// 如果提交成功则隐藏进度条
                }
            });
    }


    var myoption = {
        title: {
            text: '开机效率',
            subtext: ''
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
            },
            formatter: function (params) {
                return params[0].name + '<br/>'
                       + params[0].seriesName + ' : ' + params[0].value + '<br/>'
                       + params[1].seriesName + ' : ' + params[1].value + '<br/>'
                       + params[2].seriesName + ' : ' + params[2].value 
                   
            }
        },
        legend: {
            selectedMode: false,
            data: []
        },
        animation: false,
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: false, readOnly: false },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        calculable: true,
        xAxis: [
            {
                type: 'category',
                data: []
            }
        ],
        yAxis: [
            {
                type: 'value',
                boundaryGap: [0, 0.1]
            }
        ],
        series: [
            {
            name: '',
            type: 'bar',
            stack: 'sum',
            barCategoryGap: '50%',
            itemStyle: {
                normal: {
                    color: 'dodgerblue',
                    barBorderColor: 'burlywood',
                    barBorderWidth: 0,
                    barBorderRadius: 0,
                    label: {
                        show: true, position: 'inside'
                    }
                }
            },
            data: [14, 53, 69, 20, 28, 39]
        },
            {
                name: '',
                type: 'bar',
                stack: 'sum',
                barCategoryGap: '50%',
                itemStyle: {
                    normal: {
                        color: 'burlywood',
                        barBorderColor: 'burlywood',
                        barBorderWidth:0,
                        barBorderRadius: 0,
                        label: {
                            show: true, position: 'inside'
                        }
                    }
                },
                data: [55, 47, 10, 23, 20, 0]
            },
            {
                name: '2态',
                type: 'bar',
                stack: 'sum',
                itemStyle: {
                    normal: {
                        color: 'lightgreen',
                        barBorderColor: 'burlywood',
                        barBorderWidth: 0,
                        barBorderRadius: 0,
                        label: {
                            show: true,
                            position: 'inside',
                            //formatter: function (params) {
                            //    for (var i = 0, l = myoption.xAxis[0].data.length; i < l; i++) {
                            //        if (myoption.xAxis[0].data[i] == params.name) {
                            //            return myoption.series[0].data[i] + params.value;
                            //        }
                            //    }
                            //},
                            textStyle: {
                                color: 'blue'
                            }
                        }
                    }
                },
                data: [31, 0, 21, 57, 52, 61]
            }
        ]
    };

    function LoadData() {




        var height = getQueryString("Height");
        $("#main")[0].style.height = "200";

        myoption.legend.data = LegendData;
        myoption.series[0].name = LegendData[0];
        myoption.series[1].name = LegendData[1];
        myoption.series[2].name = LegendData[2];

        SensorCodes = $("#ddlSensor").combogrid("getValues");
        var BeginTime = $("#ddlBeginTime").datebox("getText");
        var EndTime = $("#ddlEndTime").datebox("getText");
        myoption.title.subtext = DevTypeName;
        myoption.title.text += Unit;
        var xAxisdataIndex = 0;
        myoption.xAxis[0].data = [];
        var mySensorNames = String($("#ddlSensor").combogrid("getText")).split(",");
        myoption.xAxis[0].data = mySensorNames;
        //myoption.legend.data = [];
        //myoption.series = [];
        //myoption.legend.data = [];
        $.ajax({
            url: '../Chart/ReturnSwitchDatas',
            data: { mineCode: MineCode, sensorCodes: SensorCodes.join(','), BeginTime: BeginTime, EndTime: EndTime },
            method: 'post',
            type: 'json',
            success: function (object) {

                var sensorsOjbect = $.parseJSON(object);

               

                if (sensorsOjbect.length <= 0) {
                    return;
                }

                var i = 0;
                //循环查出所有测点
                $(sensorsOjbect).each(function (index, item) {
                    if (item.length > 0) {
                       
                       /*
                        var xindex = 0;
                        var xtimes = 0;
                        for (xindex = 0; xindex < item.length; xindex++)
                        {
                            xtimes += parseInt(item.times[xindex]);
                        }
                     
                        $(item).each(function (myindex, myitem) {

                            var serriesIndex = parseInt(myitem.state);
                            myoption.series[serriesIndex].data[i] = myitem / xtimes * 100;
                           
                        });
                        
                        i++;
                     */
                    }
                });
                // myChart.clear();

                myChart.clear();
                myChart.setOption(myoption);


            },
            error: function (object) {

            }
        });
    }


</script>
